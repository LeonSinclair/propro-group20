// <auto-generated />
using AllocationApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using MySql.Data.EntityFrameworkCore.Storage.Internal;
using System;

namespace AllocationApp.Migrations
{
    [DbContext(typeof(AllocationContext))]
    partial class AllocationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("AllocationApp.Models.Hour", b =>
                {
                    b.Property<int>("HourID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("HourType");

                    b.Property<bool>("IsApproved");

                    b.Property<int>("ModuleID");

                    b.Property<int>("PayRate");

                    b.Property<int>("UserID");

                    b.HasKey("HourID");

                    b.HasIndex("UserID");

                    b.ToTable("Hours");
                });

            modelBuilder.Entity("AllocationApp.Models.Module", b =>
                {
                    b.Property<int>("ModuleID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.HasKey("ModuleID");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("AllocationApp.Models.ModuleUser", b =>
                {
                    b.Property<int>("ModuleID");

                    b.Property<int>("UserID");

                    b.Property<double>("HourlyPayRate");

                    b.Property<double>("HoursAllocated");

                    b.Property<double>("HoursPaid");

                    b.Property<double>("HoursWorked");

                    b.HasKey("ModuleID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("ModuleUsers");
                });

            modelBuilder.Entity("AllocationApp.Models.Proposal", b =>
                {
                    b.Property<int>("ModuleID");

                    b.Property<int>("UserID");

                    b.Property<bool>("Approved");

                    b.HasKey("ModuleID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("Proposal");
                });

            modelBuilder.Entity("AllocationApp.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RoleType");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AllocationApp.Models.Skill", b =>
                {
                    b.Property<int>("SkillID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ModuleID");

                    b.Property<string>("Name");

                    b.Property<int?>("UserID");

                    b.HasKey("SkillID");

                    b.HasIndex("ModuleID");

                    b.HasIndex("UserID");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("AllocationApp.Models.SubordinateModule", b =>
                {
                    b.Property<int>("ModuleID");

                    b.Property<int>("SubordinateID");

                    b.Property<int?>("UsersUserID");

                    b.HasKey("ModuleID", "SubordinateID");

                    b.HasIndex("UsersUserID");

                    b.ToTable("SubordinateModules");
                });

            modelBuilder.Entity("AllocationApp.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BankAddress");

                    b.Property<string>("BankName");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("IBAN");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int>("SortCode");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AllocationApp.Models.UserRole", b =>
                {
                    b.Property<int>("UserID");

                    b.Property<int>("RoleID");

                    b.HasKey("UserID", "RoleID");

                    b.HasIndex("RoleID");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("AllocationApp.Models.Hour", b =>
                {
                    b.HasOne("AllocationApp.Models.User")
                        .WithMany("WorkHours")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AllocationApp.Models.ModuleUser", b =>
                {
                    b.HasOne("AllocationApp.Models.Module", "Module")
                        .WithMany("Users")
                        .HasForeignKey("ModuleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AllocationApp.Models.User", "User")
                        .WithMany("Modules")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AllocationApp.Models.Proposal", b =>
                {
                    b.HasOne("AllocationApp.Models.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AllocationApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AllocationApp.Models.Skill", b =>
                {
                    b.HasOne("AllocationApp.Models.Module")
                        .WithMany("SkillRequirements")
                        .HasForeignKey("ModuleID");

                    b.HasOne("AllocationApp.Models.User")
                        .WithMany("Skills")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("AllocationApp.Models.SubordinateModule", b =>
                {
                    b.HasOne("AllocationApp.Models.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AllocationApp.Models.User", "Users")
                        .WithMany()
                        .HasForeignKey("UsersUserID");
                });

            modelBuilder.Entity("AllocationApp.Models.UserRole", b =>
                {
                    b.HasOne("AllocationApp.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AllocationApp.Models.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
